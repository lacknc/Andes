# ANDES card file, 1.0

# field = elements
# an element can be a dictionary denoted with colon
# multiple elements: separate with semi-colon
# multiple lines supported

name = PSS3

doc_string = PSAT Stabilizer III

group = PSS

data =
 avr: 0; u: 1;
 T1: 0.02; T2: 0.02;
 T3: 1; T4: 0.75;
 Tw: 1; Kw: 1;
 vsmax: 0.3; vsmin: -0.3;
 Ic: 0

descr =
 avr: Exciter id;
 T1: Filter numerator time constant;
 T2: Filter denominator time constant;
 T3: Filter numerator time constant;
 T4: Filter denominator time constant;
 Tw: Washout time constant;
 Kw: Washout gain;
 vsmax: PSS output maximum limit;
 vsmin: PSS output minimum limit;
 Ic: Input signal selector (1) shaft speed dev (2) Pg (3) Vbus

units =
 Kw: pu; Tw: s;
 T1: s; T2: s; T3: s; T4: s;
 vsmax: pu; vsmin: pu

params = A1; A2; A3; A4; A5; A6; Ks; T1; T2; T3; T4; T5; T6; lsmax; lsmin; vcu; vcl; Ic

mandatory = avr

times = T1; T2; T3; T4; T5; T6

zeros = T6

ctrl =
 syn: AVR, syn, avr, c;
 uavr: AVR, u, avr, c;
 bus: Synchronous, bus, syn, c;
 usyn: Synchronous, u, syn, c;
 Sg: Synchronous, Sn, syn, c;
 omega: Synchronous, omega, syn, x;
 v: Synchronous, v, syn, y;
 p: Synchronous, p, syn, y;
 pm: Synchronous, pm, syn, y;
 vf: Synchronous, vf, syn, y;
 w: BusFreq, w, bus, x;

algebs = In; v1; v2; v3; v4; vss; vst
fnamey = In; v_1; v_2; v_3; v_4; V_{SS}; V_{ST}

states = q0; q1; q2; q3; x1; x2; x3
fnamex = q_0; q_1; q_2; q_3; x_1; x_2; x_3

interfaces = vf

service_eq =
 u0: u*usyn*uavr;
 Ic1: 1;
 Ic2: 0;
 Ic3: 0;
 Ic4: 0;
 Ic5: 0;
 Ic6: 0;
 H1: A1 + A3;
 H2: A4 * A1*A3 + A2;
 H3: A1*A4 + A2*A3;
 H4: A2*A4;
 T12: T1/T2;
 T34: T3/T4;
 T56: T5/T6;
 KsT56: Ks*T5/T6;
 toSg: 100 / Sg;

init1_eq =
In: u0 * (Ic1*(omega - 1) + Ic2*(w - 1) + Ic3*p*toSg + Ic4*pm*toSg + Ic5*v);
q0: In;
v1: In;
x1: v1 * (1 - T12);
v2: v1;
x2: v2 * (1 - T34);
v3: v2;
x3: KsT56 * v3;

algeb_eq =
 u0 * (Ic1*(omega - 1) + Ic2*(w - 1) + Ic3*p*toSg + Ic4*pm*toSg + Ic5*v - In);
 u0 * (q0 + A5*q1 + A6* q2 - v1);
 u0 * (x1 + v1 * T12 - v2);
 u0 * (x2 + v2 * T34 - v3);
 u0 * (v3*KsT56 - x3 - v4);
 u0 * (v4 - vss);
 u0 * (vss - vst);
 u0 * vst;

hard_limit = vss: lsmin, lsmax

diff_eq =
 u0 * q1;
 u0 * q2;
 u0 * q3;
 u0 * (In - q0 - H1*q1 - H2*q2 - H3*q3)/H4;
 u0 * (v1*(1 - T12) - x1)/T2;
 u0 * (v2*(1 - T34) - x2)/T4;
 u0 * (v3* KsT56 - x3)/T6;